decl {

	param machine_nb : string = "0"

	# Borrow all parameters from the standard file, with some small
	# changes to default parameters.
	params from "%simics%/targets/qsp-x86/qsp-clear-linux.simics"
		default cpu_comp_class = "x86-coffee-lake"
		default show_con0            = TRUE
		default connect_real_network = "no"
		default auto_login_root      = FALSE
		default auto_login           = TRUE
		default num_cores            = 1
		default num_threads          = 1
		default freq_mhz = 100

	result system : string
	result eth_link : string or nil
	result service_node : string or nil
}

$machine_name = ("machine" + $machine_nb)
run-command-file "%simics%/targets/qsp-x86/qsp-clear-linux.simics" rtc_time = "2021-11-11 11:11:11" connect_real_network = "no"
$system->system_info = "QSP ISIM Tutorial"

start-agent-manager manager
manager.connect-to-agent matic

matic.upload -executable from = ./RSA/rsa_image  to = /home/simics/
matic.upload -executable from = ./RSA/encrypted.txt  to = /home/simics/

log-type -disable unimpl
log-type -disable spec-viol
    
script-branch {
  bp.console_string.wait-for $system.serconsole.con  "login: "

  run-python-file "%simics%/targets/docea/docea_model_objects.py"
  run-python-file "%simics%/targets/qsp-isim/common/isim-set-up.py"

  ## Add mini-performance model 
  $mp=(new-sample-core-timing-tool parent=$system name=($machine_name + ".sample_core_timing"))

  $mp.set-background-activity-per-cycle 8.2

  $mp.set-base-activity-per-instruction 473
  $mp.set-base-cycles-per-instruction 0.46

  $mp.set-activity-per-read 246
  $mp.set-cycles-per-read 0.01

  $mp.set-activity-per-write 567
  $mp.set-cycles-per-write 0.1

  $mp.add-instruction-class "nop" -0.20 -356
  $mp.add-instruction-class "div" 0.55 833
  $mp.add-instruction-class "mul" 0.25 321
  $mp.add-instruction-class "mla" 0.35 401
  $mp.add-instruction-class "xmm" 0.2  633
  $mp.add-instruction-class "rdtsc" 350 400
  $mp.add-instruction-class "rep stosb" 20.0 1234.0

  $mp.list-instruction-classes

  load-module docea_physical_model
  load-module power_manager

  @from itertools import product
  @signals_to_observe = [prod[0] + f"{prod[1]}" for prod in product(["T_core", "IPC_core", "F_core", "P_core", "Energy_Per_Instruction_core", "Cdyn_core"], range(simenv.num_cores))]
  @path_to_metadata = f"metadata_{simenv.machine_name}.json"

  @thermal_R = 40.0
  @leakage_parameter = 0.069
  @thermal_C = 0.1
  @thermal_throt_limit = 95.0
  @thermal_hysteresis = [0.0, 3.0]
  @ambient = 40.0
  @reference_temp = 40.0
  @workpoints = [[1.2, 4.0e9], [1.16, 3.8e9], [1.1, 3.6e9], [1.06, 3.2e9], [1.0, 3e9], [0.97, 2.7e9], [0.90, 2e9], [0.88, 1.7e9], [0.85, 1e9]]
  @cdyn_virus = 1.05e-9
  @cdyn_idle = 1.6e-11
  @governor = "ondemand"

  @kdict = {'Kp': 1.0, 'Ki': 0.0, 'Kd': 0.001}

  $original_config_file = (resolve-file ("%simics%/targets/qsp-isim/pvf_dsbs/config_machine" + $machine_nb + ".pvf_dsb"))
  $logs_folder = (sim->project + "/logs")
  @if not os.path.exists(simenv.logs_folder):
      os.makedirs(simenv.logs_folder)

  @import shutil
  @shutil.copy(simenv.original_config_file, simenv.logs_folder)

  $config_file = $logs_folder + "/config_machine" + $machine_nb + ".pvf_dsb"

  @isim_setter = Isim_Setter(simenv.machine_name, simenv.logs_folder)
  @isim_setter.set_perf_to_vp()
  @isim_setter.set_behavioral_module("tracer" + simenv.machine_nb + ".csv", signals_to_observe, thermal_C, thermal_R, leakage_parameter, ambient, reference_temp, cdyn_idle)
  @isim_setter.set_interface_modules(path_to_metadata)
  @isim_setter.set_perf_to_docea()
  @isim_setter.set_power_managers(thermal_throt_limit, thermal_hysteresis, kdict, governor, workpoints, cdyn_virus)
  #@launch_viewer(config_file = simenv.config_file)

  bp.console_string.wait-then-write $system.serconsole.con "simics@cl-qsp ~ $ " "ls -al\n"
  bp.console_string.wait-then-write $system.serconsole.con "simics@cl-qsp ~ $ " "./rsa_image\n"
  bp.console_string.wait-then-write $system.serconsole.con "simics@cl-qsp ~ $ " "ls -al\n"
  bp.console_string.wait-then-write $system.serconsole.con "simics@cl-qsp ~ $ " "simics-agent --overwrite --upload ./decrypted.txt\n"
  #stop
}
